{
	"openapi": "3.1.0",
	"info": {
		"title": "Example API",
		"description": "An example API for Igne's vite-react-template",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "https://localhost.com:5173",
			"description": "Vite development server with reverse proxy to circumvent CORS."
		}
	],
	"components": {
		"securitySchemes": {
			"auth-cookie": { "type": "apiKey", "in": "cookie", "name": "auth-cookie" }
		},
		"schemas": {
			"Problem": {
				"type": "object",
				"properties": {
					"status": { "type": "number" },
					"title": { "type": "string" },
					"instance": { "format": "uri-reference", "type": "string" },
					"detail": { "type": "string" },
					"errors": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["code", "path", "message"],
							"properties": {
								"code": { "type": "string" },
								"path": {
									"type": "array",
									"items": { "type": "string" }
								},
								"message": { "type": "string" }
							}
						}
					}
				},
				"required": ["status", "title", "instance", "detail", "errors"]
			},
			"JsonRegisterRequest": {
				"type": "object",
				"properties": {
					"name": { "type": "string" },
					"email": { "format": "email", "type": "string" },
					"password": { "type": "string" }
				},
				"required": ["name", "email", "password"]
			}
		}
	},
	"security": [{ "auth-cookie": [] }],
	"paths": {
		"/api/v1/auth/register": {
			"post": {
				"responses": {
					"200": {
						"description": "Registers an account, logs in by setting an authentication cookie, and sends a verification email.",
						"content": {
							"text/plain": { "schema": { "type": "string" } }
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					}
				},
				"operationId": "postApiV1AuthRegister",
				"tags": ["Authentication"],
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/JsonRegisterRequest" }
						}
					}
				}
			}
		},
		"/api/v1/auth/login": {
			"post": {
				"responses": {
					"200": {
						"description": "Logs in and sets an authentication cookie.",
						"content": {
							"text/plain": { "schema": { "type": "string" } }
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					}
				},
				"operationId": "postApiV1AuthLogin",
				"tags": ["Authentication"],
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": { "format": "email", "type": "string" },
									"password": { "type": "string" }
								},
								"required": ["email", "password"]
							}
						}
					}
				}
			}
		},
		"/api/v1/auth/logout": {
			"get": {
				"responses": {
					"200": {
						"description": "Logs out and clears the authentication cookie."
					},
					"401": { "description": "Missing or malformed token." }
				},
				"operationId": "getApiV1AuthLogout",
				"tags": ["Authentication"],
				"parameters": []
			}
		},
		"/api/v1/auth/forgot-password": {
			"post": {
				"responses": {
					"200": {
						"description": "If there is a user with the given email address, a recovery email will be sent to that address."
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					}
				},
				"operationId": "postApiV1AuthForgotPassword",
				"tags": ["Authentication"],
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": { "format": "email", "type": "string" }
								},
								"required": ["email"]
							}
						}
					}
				}
			}
		},
		"/api/v1/users/current": {
			"get": {
				"responses": {
					"200": {
						"description": "Gets the user that is associated to the current session.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["id", "name", "email", "createdAt", "updatedAt"],
									"properties": {
										"id": { "type": "string", "format": "uuid" },
										"name": { "type": "string" },
										"email": { "type": "string", "format": "email" },
										"profileImage": {
											"type": "object",
											"required": [
												"id",
												"data",
												"createdBy",
												"createdAt",
												"updatedBy",
												"updatedAt"
											],
											"properties": {
												"id": { "type": "string", "format": "uuid" },
												"name": { "type": "string" },
												"data": { "type": "string", "format": "bytea" },
												"createdBy": {
													"type": "object",
													"properties": {
														"id": { "type": "string", "format": "uuid" },
														"name": { "type": "string" },
														"email": { "type": "string", "format": "email" }
													}
												},
												"createdAt": {
													"type": "string",
													"format": "date-time"
												},
												"updatedBy": {
													"type": "object",
													"properties": {
														"id": { "type": "string", "format": "uuid" },
														"name": { "type": "string" },
														"email": { "type": "string", "format": "email" }
													}
												},
												"updatedAt": { "type": "string", "format": "date-time" }
											}
										},
										"createdAt": { "type": "string", "format": "date-time" },
										"updatedAt": { "type": "string", "format": "date-time" }
									}
								}
							}
						}
					},
					"401": { "description": "Unauthorized." },
					"404": { "description": "User not found." }
				},
				"operationId": "getApiV1UsersCurrent",
				"tags": ["Users"],
				"parameters": []
			}
		},
		"/api/v1/users/{id}": {
			"get": {
				"responses": {
					"200": {
						"description": "Gets a user by the given id.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["id", "name", "email", "createdAt", "updatedAt"],
									"properties": {
										"id": { "type": "string", "format": "uuid" },
										"name": { "type": "string" },
										"email": { "type": "string", "format": "email" },
										"profileImage": {
											"type": "object",
											"required": [
												"id",
												"data",
												"createdBy",
												"createdAt",
												"updatedBy",
												"updatedAt"
											],
											"properties": {
												"id": { "type": "string", "format": "uuid" },
												"name": { "type": "string" },
												"data": { "type": "string", "format": "bytea" },
												"createdBy": {
													"type": "object",
													"properties": {
														"id": { "type": "string", "format": "uuid" },
														"name": { "type": "string" },
														"email": { "type": "string", "format": "email" }
													}
												},
												"createdAt": {
													"type": "string",
													"format": "date-time"
												},
												"updatedBy": {
													"type": "object",
													"properties": {
														"id": { "type": "string", "format": "uuid" },
														"name": { "type": "string" },
														"email": { "type": "string", "format": "email" }
													}
												},
												"updatedAt": { "type": "string", "format": "date-time" }
											}
										},
										"createdAt": { "type": "string", "format": "date-time" },
										"updatedAt": { "type": "string", "format": "date-time" }
									}
								}
							}
						}
					},
					"401": { "description": "Unauthorized." },
					"404": { "description": "User not found." }
				},
				"operationId": "getApiV1UsersById",
				"tags": ["Users"],
				"parameters": [
					{
						"schema": { "type": "string" },
						"in": "path",
						"name": "id",
						"required": true
					}
				]
			},
			"patch": {
				"responses": {
					"200": {
						"description": "Overwrites the user's data with any matching entries in the request body.\n\nIf you change the email, a new verification email will be sent."
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					},
					"401": { "description": "Unauthorized" }
				},
				"operationId": "patchApiV1UsersById",
				"tags": ["Users"],
				"parameters": [
					{
						"schema": { "type": "string" },
						"in": "path",
						"name": "id",
						"required": true
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": { "type": "string" },
									"email": { "format": "email", "type": "string" }
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/projects": {
			"get": {
				"responses": {
					"200": {
						"description": "Gets a paginated list of all projects.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"items",
										"pageNumber",
										"totalPages",
										"pageSize",
										"hasNextPage",
										"hasPreviousPage"
									],
									"properties": {
										"items": {
											"type": "array",
											"items": {
												"type": "object",
												"readOnly": true,
												"required": [
													"id",
													"createdAt",
													"updatedAt",
													"createdBy",
													"updatedBy"
												],
												"properties": {
													"name": { "type": "string" },
													"createdAt": {
														"type": "string",
														"format": "date-time"
													},
													"updatedAt": {
														"type": "string",
														"format": "date-time"
													},
													"createdBy": {
														"type": "object",
														"readOnly": true,
														"required": ["id", "name", "email"],
														"properties": {
															"id": { "type": "string", "format": "uuid" },
															"name": { "type": "string" },
															"email": { "type": "string", "format": "email" }
														}
													},
													"updatedBy": {
														"type": "object",
														"readOnly": true,
														"required": ["id", "name", "email"],
														"properties": {
															"id": { "type": "string", "format": "uuid" },
															"name": { "type": "string" },
															"email": { "type": "string", "format": "email" }
														}
													}
												}
											},
											"readOnly": true
										},
										"pageNumber": { "type": "number" },
										"totalPages": { "type": "number" },
										"pageSize": { "type": "number" },
										"hasNextPage": { "type": "boolean" },
										"hasPreviousPage": { "type": "boolean" }
									},
									"readOnly": true
								}
							}
						}
					},
					"401": { "description": "Unauthorized" }
				},
				"operationId": "getApiV1Projects",
				"tags": ["Projects"],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"schema": { "type": "integer" }
					},
					{
						"in": "query",
						"name": "pageSize",
						"schema": { "type": "integer" }
					},
					{
						"in": "query",
						"name": "orderDirection",
						"schema": { "type": "string", "enum": ["asc", "desc"] }
					},
					{ "in": "query", "name": "orderBy", "schema": { "type": "string" } }
				],
				"security": [{ "auth-cookie": [] }]
			},
			"post": {
				"responses": {
					"201": {
						"description": "Creates a project and returns the id of the new project in the Location header.",
						"headers": {
							"Location": {
								"description": "The url of the newly created project.",
								"schema": { "type": "string", "format": "uri" }
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					},
					"401": { "description": "Unauthorized" }
				},
				"operationId": "postApiV1Projects",
				"tags": ["Projects"],
				"parameters": [],
				"security": [{ "auth-cookie": [] }],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": { "name": { "type": "string" } }
							}
						}
					}
				}
			}
		},
		"/api/v1/projects/{id}": {
			"get": {
				"responses": {
					"200": {
						"description": "Returns a project with the requested id.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"readOnly": true,
									"required": [
										"id",
										"createdBy",
										"createdAt",
										"updatedBy",
										"updatedAt"
									],
									"properties": {
										"id": { "type": "string", "format": "uuid" },
										"name": { "type": "string", "format": "uuid" },
										"createdBy": {
											"type": "object",
											"readOnly": true,
											"required": ["id", "name", "email"],
											"properties": {
												"id": { "type": "string", "format": "uuid" },
												"name": { "type": "string" },
												"email": { "type": "string", "format": "email" }
											}
										},
										"createdAt": { "type": "string", "format": "date-time" },
										"updatedBy": {
											"type": "object",
											"readOnly": true,
											"required": ["id", "name", "email"],
											"properties": {
												"id": { "type": "string", "format": "uuid" },
												"name": { "type": "string" },
												"email": { "type": "string", "format": "email" }
											}
										},
										"updatedAt": { "type": "string", "format": "date-time" }
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/problem+json": {
								"schema": { "$ref": "#/components/schemas/Problem" }
							}
						}
					},
					"401": { "description": "Unauthorized" }
				},
				"operationId": "getApiV1ProjectsById",
				"tags": ["Projects"],
				"parameters": [
					{
						"schema": { "type": "string" },
						"in": "path",
						"name": "id",
						"required": true
					}
				],
				"security": [{ "auth-cookie": [] }]
			}
		}
	}
}
